name: Spring App CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Create application.properties
      run: |
        echo "${{ secrets.APP_PROPERTIES }}" > src/main/resources/application.properties
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    - name: Build with Gradle
      run: ./gradlew build
    - name: Build Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/pol-back:latest
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/pol-back:latest

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pol-back:latest
          docker stop pol-back || true
          docker rm pol-back || true
          docker run -d --name pol-back -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/pol-back:latest
